{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Homepage","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"#icons-and-emojs","title":"Icons and Emojs","text":""},{"location":"pages/about/","title":"About","text":"<p>Cr\u00e9\u00e9 par blablablabla</p> Note <p>Ceci est un exemple de note. Vous pouvez les utiliser pour mettre en avant des informations importantes.</p> <p>Example test</p>"},{"location":"pages/docker/","title":"Docker : introduction, historique et utilit\u00e9","text":"<p>Docker est une plateforme ouverte qui automatis le d\u00e9ploiement des applications dans des conteneurs. Les conteneurs sont des environnements l\u00e9gers et portables qui contiennet tout ce dont une application a besoin pour fonctionner : code, librairies, d\u00e9pendances, etc.</p> <p>En d'autres termes, Docker est un outil permettant de \"construire une fois et ex\u00e9cuter partout\".</p> <p>Cela signifie que le comportement de l'application reste identique peu importe o\u00f9 elle est d\u00e9ploy\u00e9e :</p> <ul> <li>Sur la machine du d\u00e9veloppeur ;</li> <li>Dans un environnement de tests ;</li> <li>En production, sur des serveurs physiques ou dans le cloud.</li> </ul>"},{"location":"pages/docker/#historique-docker-et-machines-virtuelles","title":"Historique : Docker et Machines Virtuelles","text":"<p>Avant l'arriv\u00e9e de Docker, les entreprises s'appuyaient principalement sur des machines virtueles pour isoler les applications. Une machine virtuelle contient tout un syst\u00e8me d'exploitation complet, accompagn\u00e9 des applications et d\u00e9pendances n\u00e9cessaires, ce qui peut entra\u00eener : * Une consommation \u00e9lev\u00e9e de ressources (RAM, CPU, disque) car chaque VM embarque son propre OS * Une faible portabilit\u00e9 et des difficult\u00e9s d'int\u00e9gration entre environnements * Un d\u00e9marrage plus lent \u00e0 cause de la virtualisation compl\u00e8te (lenteur du d\u00e9marrage de l'OS, etc.)</p> <p></p> <p>Docker, lanc\u00e9 en 2013, a r\u00e9volutionn\u00e9 ce mod\u00e8le en introduisant une approche bas\u00e9e sur les conteneurs, qui permettent :</p> <ul> <li>Une isolation similaire aux VM, mais un usage bien plus l\u00e9ger des ressources</li> <li>Une meilleure portabilit\u00e9 gr\u00e2ce \u00e0 la standardisation des images Docker</li> <li>Un d\u00e9marrage presque instantan\u00e9 des applications</li> </ul>"},{"location":"pages/docker/#pourquoi-docker","title":"Pourquoi Docker ?","text":"<ul> <li> Portabilit\u00e9 : Une application dans un conteneur peut \u00eatre d\u00e9plac\u00e9e d'un environnement \u00e0 l'aure sans changement de comportement</li> <li> Isolation : Les applications fonctionnent dans des conteneurs s\u00e9par\u00e9s, ce qui \u00e9vite les conflits de d\u00e9pendances</li> <li> L\u00e9g\u00e8ret\u00e9 : Contrairement aux VM, les conteneurs partagent le noyau de l'OS, r\u00e9duisant l'encombrement pour d\u00e9marrer une VM</li> <li> Rapidit\u00e9 : Les conteneurs se lancent en quelques secondes, contrairement aux minutes n\u00e9cessaires pour d\u00e9marrer une VM</li> <li> Flexibilit\u00e9 : Docker permet de scaler facilement en cr\u00e9ant ou supprimant des conteneurs dynamiquement.</li> </ul>"},{"location":"pages/docker/architecture/","title":"Architecture de docker","text":"<p>Cette section d\u00e9taille l'architecture de Docker, les composants principaux et les interactions entre eux. Cette compr\u00e9hension est essentielle pour comprendre comment Docker fonctionne et en faire une utilisation courante.</p>"},{"location":"pages/docker/architecture/#composants-cles","title":"Composants cl\u00e9s","text":"<p>Docker repose sur plusieurs \u00e9l\u00e9ments fondamentaux qui travaillent ensemble pour fournir un environnement efficace et portable pour ex\u00e9cuter vos applications. Voici une pr\u00e9sentation des principaux composants :</p>"},{"location":"pages/docker/architecture/#images-docker","title":"Images Docker","text":"<p>Une image Docker est une unit\u00e9 autonome qui contient tout ce dont une application a besoin pour s'ex\u00e9cuter, y compris le code, les biblioth\u00e8ques, les outils syst\u00e8me, les variables d'environnement et les fichiers de configuration.</p> <p>Imaginons que l'on veuille partager un projet (Python ou R par exemple) avec quelqu'un. Pour s'assurer que le projet fonctionne chez cette personne, il faudrait leur fournir :</p> <ul> <li>Le code source du projet</li> <li>La version de Python ou R \u00e0 utiliser</li> <li>La liste des libraires \u00e0 installer</li> <li>Les configurations syst\u00e8me ou variables d'environnement n\u00e9cssaires.</li> </ul> <p>Avec Docker, toutes ces informations sont d\u00e9j\u00e0 inclues dans l'image. Vous n'avez pas \u00e0 fournir ces inforamtions, car l'image contient :</p> <ul> <li>Le syst\u00e8me d'exploitation n\u00e9cessaire (du moins une version all\u00e9g\u00e9e)</li> <li>Les outils et biblioth\u00e8ques utilis\u00e9es par l'application</li> <li>Toutes les d\u00e9pendances requises et d\u00e9j\u00e0 configur\u00e9es</li> </ul> <p>Quand vous partagez une image, elle garantit que tout fonctionnera exactement comme pr\u00e9vu, peu importe la machine ou l'environnement o\u00f9 elle est utilis\u00e9e.</p>"},{"location":"pages/docker/architecture/#structure-des-images-docker","title":"Structure des images Docker","text":"<p>Une image docker est compos\u00e9e de plusieurs couches d'instructions. Chacune repr\u00e9sente une partie de l'application ou du syst\u00e8me, par exemple : installer le syst\u00e8me d'exploitation choisi, installer Python, installer pandas, etc.</p> <p></p> <p>Ces couches sont con\u00e7ues pour \u00eatre partag\u00e9es et r\u00e9utilis\u00e9es. Cela signifie que si vous avez d\u00e9j\u00e0 une image avec les couches de base n\u00e9cessaires, vous pouvez cr\u00e9er une nouvelle image en ajoutant simplement les couches suppl\u00e9mentaires sp\u00e9cifiques \u00e0 votre application. Cela permet d'\u00e9conomiser de l'espace de stockage et d'acc\u00e9l\u00e9rer le processus de cr\u00e9ation d'images.</p>"},{"location":"pages/docker/architecture/#conteneurs-docker","title":"Conteneurs Docker","text":"<p>Un conteneur Docker est une instance ex\u00e9cutable d'une image Docker. Lorsqu'une image est ex\u00e9cut\u00e9e, elle cr\u00e9e un conteneur. Les conteneurs sont isol\u00e9s les uns des autres et du syst\u00e8me h\u00f4te, ce qui garantit que chaque conteneur dispose de toutes les ressources n\u00e9cessaires pour s'ex\u00e9cuter de mani\u00e8re ind\u00e9pendante. Les conteneurs peuvent \u00eatre d\u00e9marr\u00e9s, arr\u00eat\u00e9s, red\u00e9marr\u00e9s et supprim\u00e9s \u00e0 volont\u00e9, ce qui les rend id\u00e9aux pour les environnements de d\u00e9veloppement, de test et de production.</p>"},{"location":"pages/docker/architecture/#docker-daemon","title":"Docker Daemon","text":"<p>Le Docker Daemon est un processus en cours d'ex\u00e9cution sur la machine h\u00f4te qui g\u00e8re les images, les conteneurs, les r\u00e9seaux et les volumes. Il est responsable de la construction, du d\u00e9marrage et de l'arr\u00eat des conteneurs, de la gestion des r\u00e9seaux, de l'interaction avec les registres Docker et de la communication avec d'autres composants Docker, tels que le Docker CLI. Le Docker Daemon s'ex\u00e9cute en tant que service en arri\u00e8re-plan sur la machine h\u00f4te et peut \u00eatre contr\u00f4l\u00e9 \u00e0 distance \u00e0 l'aide de l'interface de ligne de commande Docker (CLI).</p>"},{"location":"pages/docker/architecture/#docker-cli","title":"Docker CLI","text":"<p>Le Docker CLI est un outil en ligne de commande qui permet aux utilisateurs d'interagir avec le Docker Daemon. Il fournit une interface conviviale pour ex\u00e9cuter des commandes Docker, telles que la construction d'images, le d\u00e9marrage et l'arr\u00eat de conteneurs, la gestion des r\u00e9seaux et la communication avec les registres Docker. Le Docker CLI est install\u00e9 sur la machine h\u00f4te et peut \u00eatre utilis\u00e9 pour g\u00e9rer les conteneurs Docker sur la machine locale ou \u00e0 distance sur d'autres h\u00f4tes Docker.</p>"},{"location":"pages/fastapi/","title":"Fastapi: a fast framework for building APIs with Python 3.6+ based on standard Python type hints","text":"<p>FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.</p>"},{"location":"pages/fastapi/introduction/","title":"Introduction aux APIs","text":"<p>Une API est un ensemble de r\u00e8gles et de protocoles qui permettent \u00e0 des applications de communiquer entre elles. Elle d\u00e9finit les points d'acc\u00e8s et les m\u00e9thodes de communication pour acc\u00e9der \u00e0 des fonctionnalit\u00e9s ou \u00e0 des donn\u00e9es sp\u00e9cifiques. Les APIs sont largement utilis\u00e9es pour permettre l'int\u00e9gration de services, la cr\u00e9ation d'applications tierces et la collaboration entre diff\u00e9rentes plateformes.</p>"},{"location":"pages/fastapi/introduction/#rest","title":"REST","text":"<p>Le protocole REST est blabla</p>"},{"location":"pages/fastapi/introduction/#1-architecture-client-serveur","title":"1. Architecture client-serveur","text":"<p>On construit blabalazuivnaoiu niunviureavnailvra</p> D\u00e9finition d'un client <p>\ud83d\udca1 Exemple : Lorsque vous utilisez une application mobile pour consulter votre compte bancaire, l'application mobile est le client et le serveur bancaire est le serveur. L'application mobile utilise une API REST pour r\u00e9cup\u00e9rer les informations de votre compte et les afficher \u00e0 l'\u00e9cran.</p>"},{"location":"pages/fastapi/introduction/#2-jioaeeuo","title":"2. JIOAEEUO","text":"<p>vznuivniurenvoiurz</p>"},{"location":"pages/fastapi/routers/","title":"Les routers","text":"<p>Un router est une structure nestable pour collectionner les endpoints qui partagent des caract\u00e9ritiques</p>"},{"location":"pages/fastapi/routers/#mon-premier-router","title":"Mon premier router","text":"<p>fj\u00e9ioj\u00e9ioevj\u00e9oij</p>"},{"location":"pages/fastapi/routers/#les-parametres-de-route","title":"Les param\u00e8tres de route","text":"<p>On d\u00e9finit un route selon bkoezpveno&lt;&gt;</p>"},{"location":"pages/fastapi/advanced/","title":"Advanced FastAPI usage","text":"<p>jciezovnoi</p>"},{"location":"pages/fastapi/advanced/authentication/","title":"Authentication in FastAPI","text":"<p>jvzoiurvnziuvnziuencecoieznciu</p>"},{"location":"pages/python/","title":"Python : introduction, historique et utilit\u00e9","text":"<p>Python est un langage de programmation orient\u00e9 objet (1) et open-source. Connu pour sa simplicit\u00e9, sa lisibilit\u00e9 et sa facilit\u00e9 d'apprentissage, il est utilis\u00e9 dans de nombreux domaines, notamment pour le d\u00e9veloppement web, la science des donn\u00e9es, l'intelligence artificielle, l'automatisation des t\u00e2ches, etc. De plus, Python dispose d'une vaste biblioth\u00e8que standard qui fournit des fonctionnalit\u00e9s pour de nombreuses t\u00e2ches courantes, telles que la manipulation de cha\u00eenes de caract\u00e8res, la gestion de fichiers, la communication r\u00e9seau, etc. </p> <ol> <li>Un langage orient\u00e9 objet d\u00e9finit des briques logicielles qui repr\u00e9sentent un concept, une id\u00e9e ou une entit\u00e9. Ces objets poss\u00e8dent une structure interne et des capacit\u00e9s d'interaction avec ses pairs.</li> </ol>"},{"location":"pages/python/#un-langage-cree-pour-les-developpeurs","title":"Un langage cr\u00e9e pour les d\u00e9veloppeurs","text":"Monty Python <p>C'est gratuit c'est pour la culture :  </p> <p>Python a \u00e9t\u00e9 cr\u00e9\u00e9 en f\u00e9vrier 1991 par Guido van Rossum, qui le nomma d'apr\u00e8s la s\u00e9rie de com\u00e9dies britanniques \"Monty Python's Flying Circus\".</p> <p>Python dispose d'un tr\u00e8s vaste choix de modules (packages) open-source, r\u00e9sultat de sa communaut\u00e9 tr\u00e8s active qui ne cesse de proposer de nouveaux modules et de mettre \u00e0 jour des version existantes.</p> <p>Python est constamment en \u00e9volution, ce qui lui permet de se maintenir comme premier choix pour un grand nombre d'entreprises :</p> <ul> <li> Instagram est cod\u00e9 en Python.</li> <li>  C'est le langage principal utilis\u00e9 par les ing\u00e9nieurs chez Google.</li> <li> Netflix utilise Python pour \u00e9laborer ses algorithmes de recommandation.</li> <li>  L'application de bureau de Dropbox est d\u00e9velopp\u00e9e en Python.</li> <li> Reddit est cod\u00e9 en Python.</li> </ul>"},{"location":"pages/python/#un-langage-incontournable-sur-le-marche","title":"Un langage incontournable sur le march\u00e9","text":"<p>Contrairement \u00e0 R ou SAS, Python n\u2019est pas un langage de stat. Il s\u2019agit d\u2019un langage de programmation orient\u00e9 objet disposant d\u2019innombrables possibilit\u00e9s.</p> <p>De ce fait, il est possible de faire tout ce qui existe sur R avec Python et bien plus.</p> <p>Comme le montre ce graphique dynamique, Python a su se placer en tant que leader parmi les langages de programmation depuis son entr\u00e9e dans le top 10 en 2001. Ceci semble logique au regard de sa facilit\u00e9 de prise en main, sa syntaxe user-friendly et sa compatibilit\u00e9 avec les autres langages.\u200b De plus, il s\u2019agit d\u2019un langage open-source et donc accessible pour tous.</p>"},{"location":"pages/python/debutant/dataScience/","title":"Python pour la Data Science","text":"<p>Quelques packages indispensables pour la data science :</p> <ul> <li> NumPy int\u00e8gre toutes les m\u00e9thodes pour le calcul scientifique.</li> <li> SciPy propose plusieurs m\u00e9thodes compl\u00e9mentaires \u00e0 NumPy.</li> <li> pandas icon Pandas int\u00e8gre toutes les m\u00e9thodes pour le datamanagement et se place en tant que r\u00e9f\u00e9rence dans le domaine.</li> <li> Matplotlib permet de g\u00e9n\u00e9rer des dataviz simples (dans le style de R-ggplot2).</li> <li> Plotly propose des m\u00e9thodes de dataviz plus avanc\u00e9es avec graphes interactifs.</li> <li> Seaborn est bas\u00e9 sur matplotlib et fournit une interface permettant de g\u00e9n\u00e9rer des graphiques statistiques qualitatifs.</li> <li> Scikit-learn dispose de tous les outils n\u00e9cessaires pour construire effectuer une r\u00e9duction de dimension, une classification, une r\u00e9gression, un score, \u2026</li> </ul>"},{"location":"pages/python/debutant/dataScience/#pandas-quelques-commandes-utiles","title":"Pandas : quelques commandes utiles","text":"<p>On commencera par importer pandas comme vu pr\u00e9c\u00e9demment :  <pre><code>import pandas as pd\n</code></pre></p> En cas d'erreur <p>Si vous avez install\u00e9 une distribution modulable de python, il vous faudra d'abord installer le package pandas. Pour cela, ouvrez un terminal et utilisez la commande suivante (1):</p> <ol> <li><code>pip</code> est le gestionnaire de d\u00e9pendances de python. Il s'occupe d'installer et de g\u00e9rer sur votre machine les packages python de votre choix.</li> </ol> <pre><code>pip install pandas\n</code></pre> <p>Pandas permet d'ex\u00e9cuter \u00e9norm\u00e9ment de traitement diff\u00e9rent sur les donn\u00e9es. Pour un rapide coup d'oeil je vous renvoie vers cette cheat sheet. On couvrira ici quelques points essentiels.</p> <ul> <li> <p>Importer des donn\u00e9es \u00e0 partir d'un fichier (1):</p> </li> <li> <p><code>pandas</code> accepte une grande quantit\u00e9 de formats diff\u00e9rents (csv, xlsx, json, xml, pickle, etc.) qui ont chacun leurs sp\u00e9cificit\u00e9, au besoin se r\u00e9f\u00e9rer \u00e0 la documentation.</p> </li> </ul> <pre><code>df = pd.read_csv(\"data.csv\", sep=\";\")\n</code></pre> <ul> <li>Afficher les premi\u00e8res/derni\u00e8res lignes du dataframe (1) : <pre><code>df.head()\ndf.tail()\n</code></pre></li> </ul> <p>Bon voil\u00e0 on a l'id\u00e9e le reste est vraaaaaiiiiiment pas int\u00e9ressant</p>"},{"location":"pages/python/debutant/fonctionsPackagesModules/","title":"Fonctions, packages et modules","text":""},{"location":"pages/python/debutant/fonctionsPackagesModules/#fonctions","title":"Fonctions","text":"<p>Une fonction est une portion de code qui effectue une t\u00e2che sp\u00e9cifique d\u00e9finie par l'utilisateur. Elle peut prendre des param\u00e8tres en entr\u00e9e et renvoyer un r\u00e9sultat en sortie. Les fonctions permettent de structurer le code, de le rendre plus lisible et plus modulaire.</p> <pre><code>def &lt;function_name&gt;(&lt;arg1&gt;, &lt;arg2&gt;, ...):\n    &lt;instructions&gt;\n    return &lt;output&gt;\n</code></pre> <p>Exemple d'utilisation : compter le nombre de valeurs impaires dans une liste. En d\u00e9finissant cette fonction pour l'appeler plus tard on gagne en lisibilit\u00e9, et on peut r\u00e9utiliser cette fonction pour d'autres listes sans avoir \u00e0 r\u00e9\u00e9crire le code.</p> <pre><code>def count_odd_numbers(numbers):\n    count = 0\n    for number in numbers:\n        if number % 2 == 1:\n            count += 1\n    return count\n\nprint(count_odd_numbers[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n&gt;&gt;&gt; 5\n</code></pre>"},{"location":"pages/python/debutant/fonctionsPackagesModules/#packages-et-modules","title":"Packages et modules","text":"<p>Un package python est un r\u00e9pertoire contenant une collection de modules. Un module peut \u00eatre vu comme un sous-package. Chaque module contient des m\u00e9thodes associ\u00e9es qui ne sont applicables que pour des objets appartenant \u00e0 la classe du module.</p> <p>Exemple</p> <p>Dans le package <code>datetime</code>, on trouve notamment le module <code>date</code> qui d\u00e9finit une fonction <code>today()</code> qui renvoie la date du jour. On peut donc \u00e9crire : <pre><code>import datetime\nprint(datetime.date.today())\n\n&gt;&gt;&gt; 2024-10-02\n</code></pre></p> <p>Il va de soi que l'appel de la fonction <code>today()</code> sans r\u00e9f\u00e9rence \u00e0 <code>datetime</code> n'aboutit pas, vous obtiendrez une <code>NameError</code>.</p>"},{"location":"pages/python/debutant/fonctionsPackagesModules/#differentes-methodes-dimport","title":"Diff\u00e9rentes m\u00e9thodes d'import","text":"<p>Il existe plusieurs fa\u00e7ons d'importer des modules ou des packages en Python. Reprenons le m\u00eame exemple :</p> PackagePackage avec aliasModuleFonctionTous les modules (\u00e0 \u00e9viter) <pre><code>import datetime\nprint(datetime.date.today())\n\n&gt;&gt;&gt; 2024-10-02\n</code></pre> <pre><code>import datetime as dt\nprint(dt.date.today())\n\n&gt;&gt;&gt; 2024-10-02\n</code></pre> <pre><code>from datetime import date\nprint(date.today())\n\n&gt;&gt;&gt; 2024-10-02\n</code></pre> <pre><code>from datetime.date import today\nprint(today())\n\n&gt;&gt;&gt; 2024-10-02\n</code></pre> <pre><code>from datetime import *\nprint(date.today())\n\n&gt;&gt;&gt; 2024-10-02\n</code></pre> <p>De cette mani\u00e8re, on peut \u00eatre aussi fin que possible dans les imports, \u00e9viter de surcharger le code d'imports inutiles, et nommer nos packages et modules comme on le souhaite.</p> Bonne pratique <p>On \u00e9vitera d'user des alias \u00e0 outrance et on privili\u00e9giera les alias les plus clairs possibles, ou admis par la communaut\u00e9. Par exemple, on utilisera <code>np</code> pour <code>numpy</code>, <code>pd</code> pour <code>pandas</code>, <code>plt</code> pour <code>matplotlib.pyplot</code>, etc.</p>"},{"location":"pages/python/debutant/installation/","title":"Installation","text":"<p>Pour programmer en Python, on n'a besoin que de deux \u00e9l\u00e9ments : un interpr\u00e9teur Python, et un environnement de d\u00e9veloppement.</p>"},{"location":"pages/python/debutant/installation/#interpreteur-python","title":"Interpr\u00e9teur Python","text":"<p>On pourrait utiliser divers interpr\u00e9teurs, mais l'on abordera ici la verison la plus simple.</p> WindowsmacOSLinux <p>Installer Python depuis python.org.</p> <p>Si vous n'avez pas les droits administrateurs, il est \u00e9galement possible de t\u00e9l\u00e9charger Python depuis le Microsoft Store ou, le cas \u00e9ch\u00e9ant, le store d'entreprise de votre organisation.</p> <p>macOS ne supporte pas l'installation de Python depuis python.org. Il est donc n\u00e9cessaire d'installer un gestionnaire de paquets, Homebrew. Une fois Homebrew install\u00e9, il suffit d'ex\u00e9cuter la commande <code>brew install python</code> dans un terminal.</p> <p>Si vous avez besoin d'informations pour installer Python sous Linux, passez sous Windows.</p> <p>Pour v\u00e9rifer que Python a bien \u00e9t\u00e9 insall\u00e9, ouvrez un terminal et lancez la commande suivante : <pre><code>python3 --version\n</code></pre></p> Autres options <p>Si vous n'utilisez Python que pour la Data Science, vous pouvez \u00e9galement regarder du c\u00f4t\u00e9 d'Anaconda. Cette distribution permet d'installer facilement de nombreuses librairies utiles pour la Data Science, mais peut p\u00eacher en simplicit\u00e9 et en l\u00e9g\u00e8ret\u00e9 hors de ce cadre.</p>"},{"location":"pages/python/debutant/installation/#ide-environnement-de-developpement","title":"IDE (environnement de d\u00e9veloppement)","text":"<p>Il existe de nombreux environnements de d\u00e9veloppement pour Python. Toujours dans une optique de versatilit\u00e9, on se tourne ici vers Visual Studio Code.</p> <p>VSCode est un \u00e9diteur de texte gratuit et open-source d\u00e9velopp\u00e9 par Microsoft qui supporte, en plus de Python, de tr\u00e8s nombreux langages (1). Il est tr\u00e8s populaire dans la communaut\u00e9 des d\u00e9veloppeurs, en raison de sa flexibilit\u00e9, de sa vitesse et de sa richesse en extensions. Il est \u00e9galement tr\u00e8s bien support\u00e9 par la communaut\u00e9 Python, avec de nombreuses extensions disponibles pour faciliter le d\u00e9veloppement en Python.</p> <ol> <li>On parle ici de plus de 30 langages parmis les plus courants (Python, C, C++, Java, HTML, JavaScript, etc.) et les langages de DataScience usuels (SAS, R).</li> </ol> <p>Pour installer Visual Studio Code, rendez-vous sur la page de t\u00e9l\u00e9chargement et suivez les instructions d'installation.</p>"},{"location":"pages/python/debutant/installation/#extensions-vscode","title":"Extensions VSCode","text":"<p>Il est possible d'installer des extensions pour Visual Studio Code afin d'ajouter des fonctionnalit\u00e9s, comme par exemple l'int\u00e9gration de Git, la possibilit\u00e9 de d\u00e9boguer du code, de visualiser des jeux de donn\u00e9es, de lire de tr\u00e8s nombreux types de fichiers (images, pdf, csv, etc.)</p>"},{"location":"pages/python/debutant/installation/#vscode-pour-python","title":"VSCode pour Python","text":"<p>Dans le cadre de ce cours, on se contentera de l'extension Python pour Visual Studio Code, qui permet d'ex\u00e9cuter du code Python directement depuis l'\u00e9diteur, et de b\u00e9n\u00e9ficier de l'autocompl\u00e9tion et de la coloration syntaxique.</p> <p>Pour l'installer, ouvrez Visual Studio Code, puis cliquez sur l'ic\u00f4ne d'extensions dans la barre lat\u00e9rale gauche. Dans la barre de recherche, tapez <code>Python</code> et installez l'extension <code>Python</code> de Microsoft.</p>"},{"location":"pages/python/debutant/installation/#projet-vscode","title":"Projet VSCode","text":"<p>Pour cr\u00e9er un projet Python, il suffit de cr\u00e9er un dossier, puis d'ouvrir ce dossier avec Visual Studio Code. Il est possible de cr\u00e9er un fichier <code>.py</code> \u00e0 la racine du dossier, qui sera le point d'entr\u00e9e de votre projet. Il est \u00e9galement possible de cr\u00e9er un fichier <code>.ipynb</code> \u00e0 la racine du dossier, qui sera un notebook Jupyter. Ce fichier peut \u00eatre ouvert directement dans Visual Studio Code, ou dans Jupyter Lab. Pour ouvrir un notebook Jupyter dans Visual Studio Code, il suffit de cliquer sur le bouton <code>Open with Jupyter</code> dans la barre d'outils du fichier. Pour ouvrir un notebook Jupyter dans Jupyter Lab, il suffit de lancer la commande <code>jupyter lab</code> dans un terminal, puis de cliquer sur le fichier dans l'interface de Jupyter Lab.</p>"},{"location":"pages/python/debutant/notions/","title":"Notions avant de d\u00e9buter","text":""},{"location":"pages/python/debutant/notions/#objets-courant","title":"Objets courant","text":""},{"location":"pages/python/debutant/notions/#types-de-base","title":"Types de base","text":"<ul> <li><code>int</code>: entier relatif \\(i.e. \\in \\mathbb{Z}\\)</li> <li><code>float</code>: nombre \u00e0 virgule \\(i.e. \\in \\mathbb{R}\\)</li> <li><code>str</code>: (string) cha\u00eene de caract\u00e8res.</li> <li><code>bool</code>: bool\u00e9en, peut prendre les valeurs <code>True</code> ou <code>False</code></li> </ul>"},{"location":"pages/python/debutant/notions/#conteneurs-de-base","title":"Conteneurs de base","text":"<ul> <li><code>list</code>: Une liste est une s\u00e9quence it\u00e9rable et modifiable de donn\u00e9es? Cela signifie que chaque \u00e9l\u00e9ment de la liste est associ\u00e9 \u00e0 une position (index). Le premier \u00e9l\u00e9ment d'une liste de taille <code>n</code> poss\u00e8de l'index 0 et le dernier poss\u00e8de l'index <code>n-1</code>.</li> <li><code>tuple</code>: Un n-uplet (appel\u00e9 tuple en anglais) est une s\u00e9quence non modifiable de donn\u00e9es ordonn\u00e9es. Cela signifie que chaque \u00e9l\u00e9ment du tuple est associ\u00e9 \u00e0 une position (un index). Le premier \u00e9l\u00e9ment d\u2019un tuple poss\u00e8de l\u2019index 0 et le dernier \u00e9l\u00e9ment poss\u00e8de l\u2019index n - 1 pour une liste contenant n \u00e9l\u00e9ments. Contrairement aux listes, les tuples ne sont pas modifiables\u200b.</li> <li><code>dict</code>: Un dictionnaire est une collection qui associe une cl\u00e9 \u00e0 une valeur. Les valeurs d\u2019une liste peuvent \u00eatre de type int, float, str mais aussi des list, tuple ou dict</li> </ul>"},{"location":"pages/python/debutant/operateurs/","title":"Op\u00e9rateurs et algorithmie","text":""},{"location":"pages/python/debutant/operateurs/#operateurs-de-base","title":"Op\u00e9rateurs de base","text":""},{"location":"pages/python/debutant/operateurs/#operateurs-daffectation","title":"Op\u00e9rateurs d'affectation","text":"Op\u00e9rateur Exemple Equivalent \u00e0 Description Output <code>=</code> <code>x = 7</code> Affecte \\(7\\) \u00e0 la variable \\(x\\) 7 <code>+=</code> <code>x += 2</code> <code>x = x+2</code> Affecte la valeur \\(x+2\\) \u00e0 la variable \\(x\\) 9 <code>-=</code> <code>x -= 2</code> <code>x = x-2</code> Affecte la valeur \\(x-2\\) \u00e0 la variable \\(x\\) 5 <code>/=</code> <code>x /= 2</code> <code>x = x/2</code> Affecte la valeur \\(x/2\\) \u00e0 la variable \\(x\\) 3.5 <code>%=</code> <code>x %= 2</code> <code>x = x%2</code> Affecte la valeur \\(x%\\) (reste de la division euclidienne) \u00e0 la variable \\(x\\) 1 <code>//=</code> <code>x //= 2</code> <code>x = x//2</code> Affecte la valeur \\(x//2\\) (quotient de la division euclidienne) \u00e0 la variable \\(x\\) 3 <code>**=</code> <code>x **= 2</code> <code>x = x**2</code> Affecte \\(x^2\\) \u00e0 la variable \\(x\\) 49 <code>&amp;=</code> <code>C &amp;= C2</code> <code>C = C &amp; C2</code> Affecte \u00e0 la variable \\(C\\) la valeur \\(True\\) si \\(C\\) et \\(C2\\) valent \\(True\\), \\(False\\) sinon False <code>\\|=</code> <code>C \\|= C2</code> <code>C = C \\| C2</code> Affecte \u00e0 la variable \\(C\\) la valeur True si   l\u2019une des 2 variables \\(C\\) ou \\(C2\\) vaut \\(True\\),   \\(False\\) sinon True <code>^=</code> <code>C ^= C2</code> <code>C = C ^ C2</code> Affecte \u00e0 la variable \\(C\\) la valeur True si   \\(C\\|C2\\) est \\(True\\) ET \\(C\\&amp;C2\\) est \\(False\\)   (OU exclusif), \\(False\\) sinon True"},{"location":"pages/python/debutant/operateurs/#operateurs-de-comparaison","title":"Op\u00e9rateurs de comparaison","text":"Op\u00e9rateur Exemple Description Output <code>==</code> <code>x==7</code> \u00c9gal True <code>!=</code> <code>x!=7</code> Diff\u00e9rent False <code>&lt;</code> <code>x&lt;8</code> Inf\u00e9rieur True <code>&gt;</code> <code>x&gt;7</code> Sup\u00e9rieur False <code>&lt;=</code> <code>x&lt;=7</code> Inf\u00e9rieur ou \u00e9gal True <code>&gt;=</code> <code>x&gt;=9</code> Sup\u00e9rieur ou \u00e9gal False <code>in</code> <code>x in [3, 'pomme', True, 7]</code> Appartenance \u00e0 une liste True <code>not</code> <code>not x</code> N\u00e9gation False <code>and</code> <code>x&lt;10 and x&gt;3</code> ET logique True <code>or</code> <code>x&lt;10 or x&gt;3</code> OU logique True"},{"location":"pages/python/debutant/operateurs/#algorithmie","title":"Algorithmie","text":""},{"location":"pages/python/debutant/operateurs/#expressions-conditionnelles","title":"Expressions conditionnelles","text":"<ul> <li>Simple bloc <code>if-then</code></li> </ul> Id\u00e9eExemple <pre><code>if &lt;condition&gt;:\n    &lt;expression&gt;\n</code></pre> <p>Le bloc <code>&lt;expression&gt;</code> est ex\u00e9cut\u00e9 si la condition <code>&lt;condition&gt;</code> est <code>True</code>.</p> <pre><code>x = 3\nif x &gt; 0:\n    print('Hello World!')\n\n&gt;&gt;&gt; Hello World!\n</code></pre> <p>Puisque 3 est sup\u00e9rieur \u00e0 0, la condition est vraie et le bloc <code>print('Hello World!')</code> est ex\u00e9cut\u00e9.</p> <ul> <li>Bloc <code>if-then-else</code></li> </ul> Id\u00e9eExemple <pre><code>if &lt;condition&gt;:\n    &lt;expression_if&gt;\nelse:\n    &lt;expression_else&gt;\n</code></pre> <p>Si <code>&lt;condition&gt;</code> est <code>True</code>, le bloc <code>&lt;expression_if&gt;</code> est ex\u00e9cut\u00e9, sinon le bloc <code>&lt;expression_else&gt;</code> est ex\u00e9cut\u00e9.</p> <pre><code>x = 3\nif x &lt;= 0:\n    print('x is negative')\nelse:\n    print('x is positive')\n\n&gt;&gt;&gt; x is positive\n</code></pre> <p>Puisque <code>x</code>est sup\u00e9rieur \u00e0 0, la condition est fausse et le bloc <code>print('x is positive')</code> est ex\u00e9cut\u00e9.</p> <ul> <li>Bloc <code>if-then-elif-then-else</code></li> </ul> Id\u00e9eExemple <pre><code>if &lt;condition_if&gt;:\n    &lt;expression_if&gt;\nelif &lt;condition_elif&gt;:\n    &lt;expression_elif&gt;\nelse:\n    &lt;expression_else&gt;\n</code></pre> <p>Si <code>&lt;condition_if&gt;</code> est <code>True</code>, le bloc <code>&lt;expression_if&gt;</code> est ex\u00e9cut\u00e9, sinon si <code>&lt;condition_elif&gt;</code> est <code>True</code>, le bloc <code>&lt;expression_elif&gt;</code> est ex\u00e9cut\u00e9, sinon le bloc <code>&lt;expression_else&gt;</code> est ex\u00e9cut\u00e9.</p> <pre><code>x = 3\nif x &lt; 0:\n    print('x is negative')\nelif x == 0:\n    print('x is zero')\nelse:\n    print('x is positive')\n\n&gt;&gt;&gt; x is positive\n</code></pre> <p>Puisque <code>x</code> est strictement sup\u00e9rieur \u00e0 0, les conditions <code>&lt; 0</code> et <code>== 0</code> sont fausses et le bloc <code>print('x is positive')</code> est ex\u00e9cut\u00e9.</p>"},{"location":"pages/python/debutant/operateurs/#boucles","title":"Boucles","text":"<p>Contrairement \u00e0 d\u2019autres langages, les boucles sont assez performantes en Python. M\u00eame s\u2019il ne faut pas en abuser, leur utilisation est tr\u00e8s simple et ne provoque normalement pas de lenteur lors de l\u2019ex\u00e9cution comme il est souvent le cas en R.</p> <p>Attention</p> <p>En Python, le premier index est 0.</p> <ul> <li>Boucle <code>for</code></li> </ul> Parcours par indexParcours par \u00e9l\u00e9ment <pre><code>names = ['Alice', 'Bob', 'Charles']\nfor i in range(len(names)):  # (1)\n    print(f'Hello {names[i]}!')  # (2)\n\n&gt;&gt;&gt; Hello Alice!\n&gt;&gt;&gt; Hello Bob!\n&gt;&gt;&gt; Hello Charles!\n</code></pre> <ol> <li><ul><li>La fonction <code>range(n)</code> g\u00e9n\u00e8re la suite d'entiers naturels \\(0,1, ..., n-1\\).</li><li>La fonction <code>len(list)</code> renvoie la longueur de la liste.</li></ul></li> <li><code>f-string</code> : permet d'ins\u00e9rer des variables dans une cha\u00eene de caract\u00e8res. La syntaxe est <code>f'cha\u00eene de caract\u00e8res {variable}'</code>.</li> </ol> <p>La boucle <code>for</code> it\u00e8re sur la variable <code>i</code> qui prendra les valeurs g\u00e9n\u00e9r\u00e9es par <code>range</code> et ex\u00e9cutera le bloc d'instructions pour chaque valeur de <code>i</code>.</p> <pre><code>names = ['Alice', 'Bob', 'Charles']\nfor name in names:\n    print(f'Hello {name}!')\n</code></pre> <p>La boucle <code>for</code> it\u00e8re sur directement sur les valeurs de la liste <code>names</code> et ex\u00e9cutera le bloc d'instructions pour chaque valeur de <code>name</code>.</p> <ul> <li>Boucle <code>while</code></li> </ul> Id\u00e9eExemple <pre><code>while &lt;condition&gt;:\n    &lt;expression&gt;\n</code></pre> <p>La boucle <code>while</code> permet d'\u00e9xecuter une instruction tant que la condition est <code>True</code>.</p> <pre><code>k, stop = 2, 5\nwhile k &lt; stop:\n    print(f\"Le carr\u00e9 de {k} vaut {k**2}.\")\n    k += 1\n\n&gt;&gt;&gt; Le carr\u00e9 de 2 vaut 4\n&gt;&gt;&gt; Le carr\u00e9 de 3 vaut 9\n&gt;&gt;&gt; Le carr\u00e9 de 4 vaut 16\n</code></pre> <p>La boucle <code>while</code> it\u00e8re tant que <code>k</code> est inf\u00e9rieur \u00e0 <code>stop</code> et ex\u00e9cutera le bloc d'instructions pour chaque valeur de <code>k</code>.</p> <p>Attention</p> <p>La boucle while continuera \u00e0 tourner tant que la condition sera v\u00e9rifi\u00e9e, il faut donc faire attention \u00e0 ce que le bloc d\u00e9finisse une action qui mettra fin \u00e0 la v\u00e9racit\u00e9 de la condition (1).</p> <ol> <li>Dans l'exemple ci-dessus, <code>k</code> est incr\u00e9ment\u00e9 de 1 \u00e0 chaque tour de boucle, ce qui permet de sortir de la boucle lorsque <code>k</code> est \u00e9gal \u00e0 <code>stop</code>.</li> </ol>"}]}